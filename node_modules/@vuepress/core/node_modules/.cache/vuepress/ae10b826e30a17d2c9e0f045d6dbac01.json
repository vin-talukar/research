{"remainingRequest":"/Users/x/Work/research/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/x/Work/research/node_modules/@vuepress/core/.temp/internal/siteData.js","dependencies":[{"path":"/Users/x/Work/research/node_modules/@vuepress/core/.temp/internal/siteData.js","mtime":1588784213322},{"path":"/Users/x/Work/research/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/x/Work/research/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}